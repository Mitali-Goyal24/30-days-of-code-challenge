class Solution {
public:
    long long int res(vector<int>& piles , int hrs) {
        long long int totalhrs=0;
        for(int i=0;i<piles.size();i++){
            totalhrs+= ceil((double)piles[i]/(double)hrs);
        }
        return totalhrs;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int low = 1 , high= *max_element(piles.begin(), piles.end()),ans=-1;
        sort(piles.begin(),piles.end());
        while(low<=high){
            int mid= low+(high-low)/2;
            long long int total = res(piles , mid);
            if(total<=h){
                ans = mid;
                high = mid-1;
            }
            else{
                low = mid + 1;
            }
        }
        return ans;
    }
};