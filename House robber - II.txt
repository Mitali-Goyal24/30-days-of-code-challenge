class Solution {
public:
    
    long long int two(vector<int>& vec){
        int s= vec.size();
        if(s==0){
            return 0;
        }
        if(s==1){
            return vec[0];
        }
        vector<int>dp(s,0);
        dp[0]=vec[0];
        dp[1]=max(vec[0] , vec[1]);

        for(int i=2;i<s;i++){
            dp[i]= max(dp[i-1], dp[i-2]+vec[i]);
        }

        return dp[s-1];
    }

    long long int rob(vector<int>& nums) {
        long long int n = nums.size();
        if(n==0){
            return 0;
        }
        if(n==1){
            return nums[0];
        }
        vector<int> first , second;
        for(int i=0;i<n;i++){
            if(i != n-1){
                first.push_back(nums[i]);
            }
            if(i != 0 ){
                second.push_back(nums[i]);
            }
        }
        return max(two(first),two(second));
    }
};